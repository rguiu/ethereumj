package org.ethereum.validator;

import org.ethereum.core.Block;
import org.junit.Test;
import org.spongycastle.util.encoders.Hex;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

/**
 * @author Igor Artamonov
 */
public class HardForkRuleTest {

    private HardForkRule rule = new HardForkRule();

    @Test
    public void test_1_920_000_HF() {
        byte[] rlp = Hex.decode(
            "f903cdf9020da0a218e2c611f21232d857e3c8cecdcdf1f65f25a4477f98f6f4" +
            "7e4063807f2308a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413" +
            "f0a142fd40d4934794bcdfc35b86bedf72f0cda046a3c16829a2ef41d1a0c5e3" +
            "89416116e3696cce82ec4533cce33efccb24ce245ae9546a4b8f0d5e9a75a077" +
            "01df8e07169452554d14aadd7bfa256d4a1d0355c1d174ab373e3e2d0a3743a0" +
            "26cf9d9422e9dd95aedc7914db690b92bab6902f5221d62694a2fa5d065f534b" +
            "b901000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000000000000000000000000000000000000000000000000000000000000000" +
            "0000008638c3bf2616aa831d4c008347e7c08301482084578f7aa88d64616f2d" +
            "686172642d666f726ba05b5acbf4bf305f948bd7be176047b20623e1417f7559" +
            "7341a059729165b9239788bede87201de42426f901b9f86c018504a817c80082" +
            "52089453d284357ec70ce289d6d64134dfac8e511c8a3d8814da2c24e0d37014" +
            "801ba0fdbbc462a8a60ac3d8b13ee236b45af9b7991cf4f0f556d3af46aa5aec" +
            "a242aba05de5dc03fdcb6cf6d14609dbe6f5ba4300b8ff917c7d190325d9ea21" +
            "44a7a2fbf86c018504a817c8008252089453d284357ec70ce289d6d64134dfac" +
            "8e511c8a3d888b6cfa3afc058000801ba08d94a55c7ac7adbfa2285ef7f4b0c9" +
            "55ae1a02647452cd4ead03ee6f449675c6a067149821b74208176d78fc4dffbe" +
            "37c8b64eecfd47532406b9727c4ae8eb7c9af86d018504a817c8008252089453" +
            "d284357ec70ce289d6d64134dfac8e511c8a3d890116db7272d6d94000801ca0" +
            "6d31e3d59bfea97a34103d8ce767a8fe7a79b8e2f30af1e918df53f9e78e69ab" +
            "a0098e5b80e1cc436421aa54eb17e96b08fe80d28a2fbd46451b56f2bca7a321" +
            "e7f86c018504a817c8008252089453d284357ec70ce289d6d64134dfac8e511c" +
            "8a3d880e301365046d5000801ba0bafb9f71cef873b9e0395b9ed89aac4f2a75" +
            "2e2a4b88ba3c9b6c1fea254eae73a01cef688f6718932f7705d9c1f0dd5a8aad" +
            "9ddb196b826775f6e5703fdb997706c0");
        Block b = new Block(rlp);
        assertFalse(rule.validate(b.getHeader()));
    }

    @Test
    public void test_1_920_000_CLASSIC() {
        byte[] rlp = Hex.decode(
            "f903cff9020fa0a218e2c611f21232d857e3c8cecdcdf1f65f25a4477f98f6f4" +
                "7e4063807f2308a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413" +
                "f0a142fd40d493479461c808d82a3ac53231750dadc13c777b59310bd9a0614d" +
                "7d358b03cbdaf0343529673be20ad45809d02487f023e047efdce9da8affa0d3" +
                "3068a7f21bff5018a00ca08a3566a06be4196dfe9e39f96e431565a619d455a0" +
                "7bda9aa65977800376129148cbfe89d35a016dd51c95d6e6dc1e76307d315468" +
                "b901000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000008638c3bf2616aa831d4c008347e7c08301482084578f7aa78fe4b883e5" +
                "bda9e7a59ee4bb99e9b1bca0c52daa7054babe515b17ee98540c0889cf5e1595" +
                "c5dd77496997ca84a68c8da18805276a600980199df901b9f86c018504a817c8" +
                "008252089453d284357ec70ce289d6d64134dfac8e511c8a3d888b6cfa3afc05" +
                "8000801ba08d94a55c7ac7adbfa2285ef7f4b0c955ae1a02647452cd4ead03ee" +
                "6f449675c6a067149821b74208176d78fc4dffbe37c8b64eecfd47532406b972" +
                "7c4ae8eb7c9af86d018504a817c8008252089453d284357ec70ce289d6d64134" +
                "dfac8e511c8a3d890116db7272d6d94000801ca06d31e3d59bfea97a34103d8c" +
                "e767a8fe7a79b8e2f30af1e918df53f9e78e69aba0098e5b80e1cc436421aa54" +
                "eb17e96b08fe80d28a2fbd46451b56f2bca7a321e7f86c018504a817c8008252" +
                "089453d284357ec70ce289d6d64134dfac8e511c8a3d8814da2c24e0d3701480" +
                "1ba0fdbbc462a8a60ac3d8b13ee236b45af9b7991cf4f0f556d3af46aa5aeca2" +
                "42aba05de5dc03fdcb6cf6d14609dbe6f5ba4300b8ff917c7d190325d9ea2144" +
                "a7a2fbf86c018504a817c8008252089453d284357ec70ce289d6d64134dfac8e" +
                "511c8a3d880e301365046d5000801ba0bafb9f71cef873b9e0395b9ed89aac4f" +
                "2a752e2a4b88ba3c9b6c1fea254eae73a01cef688f6718932f7705d9c1f0dd5a" +
                "8aad9ddb196b826775f6e5703fdb997706c0");
        Block b = new Block(rlp);
        assertTrue(rule.validate(b.getHeader()));
    }

    @Test
    public void test_1_919_999() {
        byte[] rlp = Hex.decode(
            "f9020bf90206a0505ffd21f4cbf2c5c34fa84cd8c92525f3a719b7ad18852bff" +
                "ddad601035f5f4a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413" +
                "f0a142fd40d49347942a65aca4d5fc5b5c859090a6c34d164135398226a0fdf2" +
                "fc04580b95ca15defc639080b902e93892dcce288be0c1f7a7bbc778248ba056" +
                "e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a0" +
                "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421" +
                "b901000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000000000000000000000000000000000000000000000000000000000000000" +
                "0000008638bca78f24c6831d4bff8347d5cc8084578f7aa6894477617266506f" +
                "6f6ca0a0230af0a0d3d297b7e8c2473d163b1eb0b1bbbb4e9d933e5fdea08546" +
                "b56e598860832709c8979daac0c0");
        Block b = new Block(rlp);
        assertTrue(rule.validate(b.getHeader()));
    }

    @Test
    public void test_1_920_001() {
        byte[] rlp = Hex.decode(
            "");
        Block b = new Block(rlp);
        assertTrue(rule.validate(b.getHeader()));
    } 
}
